plugins {
    id "groovy"
    id "maven"
    id "com.jfrog.bintray" version "1.7.3"
}

group = "murtools"
version = "0.0.1"

def compatibilityVersion = 1.5
sourceCompatibility = compatibilityVersion
targetCompatibility = compatibilityVersion

repositories {
    mavenCentral()
}


dependencies {
    compile localGroovy(),
            gradleApi(),
            "org.scalatra.scalate:scalate-precompiler_2.12:1.8.0.1"

    testCompile "org.fusesource.scalate:scalate-core:1.8.0"
}

jar {
    manifest {
        attributes "Implementation-Title": "Gradle Scalate plugin",
                   "Implementation-Version": version,
                   "Built-By": System.getenv("USER"),
                   "Built-Date": new Date(),
                   "Built-JDK": System.getProperty("java.version"),
                   "Built-Gradle": gradle.gradleVersion
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}
artifacts.archives sourcesJar

bintray {
    user = System.getenv("BINTRAY_USER")
    key = System.getenv("BINTRAY_KEY")
    configurations = ["archives"]
    pkg {
        repo = "gradle-plugins"
        name = "gradle-scalate-plugin"
        licenses = ["WTFPL"]
        vcsUrl = "git@github.com:abesto/gradle-scalate-plugin.git"
        version {
            name = project.version
            desc = "Gradle Scalate Plugin ${project.version}"
            released = new Date()
            vcsTag = project.version
        }
    }
}

task testprojectTest(type: GradleBuild) {
    dir = file("testproject")
    buildFile = file("testproject/build.gradle")
    tasks = ["clean", "scalatePreCompile", "test"]
}

test {
    dependsOn(testprojectTest)
    jvmArgs "-Xmx=1024m -XX:MaxPermSize=256m"
}
